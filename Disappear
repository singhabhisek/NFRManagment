private void ExportToExcel(GridView gridView)
    {
        Response.Clear();
        Response.Buffer = true;
        Response.AddHeader("content-disposition", "attachment;filename=ExportedData.xls");
        Response.Charset = "";
        Response.ContentType = "application/vnd.ms-excel";

        using (StringWriter sw = new StringWriter())
        {
            using (HtmlTextWriter htw = new HtmlTextWriter(sw))
            {
                // Create a table to hold the grid
                Table table = new Table();

                // Export header row
                if (gridView.HeaderRow != null)
                {
                    PrepareControlForExport(gridView.HeaderRow);
                    table.Rows.Add(gridView.HeaderRow);
                }

                // Export data rows
                foreach (GridViewRow row in gridView.Rows)
                {
                    PrepareControlForExport(row);
                    table.Rows.Add(row);
                }

                // Render the table into the htmlwriter
                table.RenderControl(htw);

                // Write the html to the response
                Response.Write(sw.ToString());
                Response.End();
            }
        }
    }

    private void PrepareControlForExport(Control control)
    {
        foreach (Control currentControl in control.Controls)
        {
            if (currentControl is LinkButton)
            {
                control.Controls.Remove(currentControl);
            }
            else if (currentControl is ImageButton)
            {
                control.Controls.Remove(currentControl);
            }
            else if (currentControl is HyperLink)
            {
                control.Controls.Remove(currentControl);
            }
            else if (currentControl is DropDownList)
            {
                control.Controls.Remove(currentControl);
            }
            else if (currentControl is CheckBox)
            {
                control.Controls.Remove(currentControl);
            }
            else if (currentControl is HiddenField)
            {
                control.Controls.Remove(currentControl);
            }

            if (currentControl.Controls.Count > 0)
            {
                PrepareControlForExport(currentControl);
            }
        }
    }


===================




<script>
    // Function to handle hover events and set a timeout to hide the HoverMenuExtender
    function handleHover(event) {
        var hoverMenuExtender = $find('<%= HoverMenuExtender1.ClientID %>');
        var panel1 = document.getElementById('<%= Panel1.ClientID %>');

        // Check if the cursor is entering the panel
        if (event.type === 'mouseenter') {
            // Show the HoverMenuExtender
            hoverMenuExtender._popupBehavior.show();
        } else if (event.type === 'mouseleave') {
            // Set a timeout to hide the HoverMenuExtender after 2 seconds
            setTimeout(function () {
                hoverMenuExtender._popupBehavior.hide();
            }, 2000);
        }
    }

    // Attach hover event handlers to the Panel1
    var panel1 = document.getElementById('<%= Panel1.ClientID %>');
    panel1.addEventListener('mouseenter', handleHover);
    panel1.addEventListener('mouseleave', handleHover);
</script>

        <asp:Panel ID="Panel1" runat="server" OnMouseOver="handleHover(event)" OnMouseOut="handleHover(event)">




============================================


<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="YourPage.aspx.cs" Inherits="YourNamespace.YourPage" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Modal Popup Example</title>
    <script type="text/javascript">
        // Function to show the modal pop-up and hide it after 2 seconds
        function showModalPopup() {
            // Show the modal pop-up
            $find('<%=ModalPopupExtender1.ClientID %>').show();

            // Set a timeout to hide the modal pop-up after 2000 milliseconds (2 seconds)
            setTimeout(function () {
                $find('<%=ModalPopupExtender1.ClientID %>').hide();
            }, 2000);
        }
    </script>
</head>
<body>
    <form id="form1" runat="server">
        <asp:ScriptManager runat="server"></asp:ScriptManager>
        
        <!-- Your content goes here -->

        <!-- Modal Popup Extender -->
        <ajaxToolkit:ModalPopupExtender ID="ModalPopupExtender1" runat="server"
            TargetControlID="btnShowModalPopup" PopupControlID="Panel1"
            BackgroundCssClass="modalBackground" DropShadow="true">
        </ajaxToolkit:ModalPopupExtender>

        <!-- Button to trigger the modal pop-up -->
        <asp:Button ID="btnShowModalPopup" runat="server" Text="Show Modal Popup"
            OnClientClick="showModalPopup(); return false;" />

        <!-- Panel containing the content of the modal pop-up -->
        <asp:Panel ID="Panel1" runat="server" CssClass="modalPopup" style="display: none;">
            <!-- Your modal pop-up content goes here -->
            <div>
                This is your modal pop-up content.
            </div>
        </asp:Panel>
    </form>
</body>
</html>
